定义
    将一个请求封装为一个对象，从而使你可用不同的请求对客户进行参数化；对请求排队或记录请求日志，以及支持可撤消的操作。
    看起来，命令模式好像神通广大。其实命令模式的以上功能还要看你是怎么写的——程序总是程序员写出来的，你写啥它才能干啥：）
    在我看来，其实命令模式像很多设计模式一样——通过在你的请求和处理之间加上了一个中间人的角色，来达到分离耦合的目的。
    通过对中间人角色的特殊设计来形成不同的模式。
    当然命令模式就是一种特殊设计的结果。
    看下命令模式是有哪些角色来组成的吧。
        1) 命令角色（Command）：声明执行操作的接口。有 java 接口或者抽象类来实现。
        2) 具体命令角色（Concrete Command）：将一个接收者对象绑定于一个动作；调用接收者相应的操作，以实现命令角色声明的执行操作的接口。
        3) 客户角色（Client）：创建一个具体命令对象（并可以设定它的接收者）。
        4) 请求者角色（Invoker）：调用命令对象执行这个请求。
        5) 接收者角色（Receiver）：知道如何实施与执行一个请求相关的操作。任何类都可能作为一个接收者。

